/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.harsh.rpssim;

import java.util.List;
import javax.swing.SwingWorker;

/**
 *
 * @author Harsh Noise
 */
public class SimViewer extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(SimViewer.class.getName());
    static RPSSim sim;
    static boolean stopStatus = false;
    
    /**
     * Creates new form SimViewer
     */
    public SimViewer() {
        sim = new RPSSim();
        initComponents();
        sim.initialize();
        TerminateSimButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        CreatureNumSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        RunSimButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        RockPercent = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        PaperPercent = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        ScissorPercent = new javax.swing.JProgressBar();
        TerminateSimButton = new javax.swing.JButton();
        viewerPanel = new com.harsh.rpssim.CreatureViewerPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CreatureNumSlider.setMajorTickSpacing(1);
        CreatureNumSlider.setMaximum(4);
        CreatureNumSlider.setPaintLabels(true);
        CreatureNumSlider.setPaintTicks(true);
        CreatureNumSlider.setSnapToTicks(true);
        CreatureNumSlider.setToolTipText("");
        CreatureNumSlider.setValue(0);

        jLabel2.setText("Rock");

        RunSimButton.setText("Run Sim");
        RunSimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunSimButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Total number of creatures (10^x)");

        jLabel4.setText("Paper");

        jLabel5.setText("Scissors");

        TerminateSimButton.setText("Terminate Sim");
        TerminateSimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerminateSimButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewerPanelLayout = new javax.swing.GroupLayout(viewerPanel);
        viewerPanel.setLayout(viewerPanelLayout);
        viewerPanelLayout.setHorizontalGroup(
            viewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        viewerPanelLayout.setVerticalGroup(
            viewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RockPercent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PaperPercent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RunSimButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CreatureNumSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ScissorPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(TerminateSimButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CreatureNumSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RunSimButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RockPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PaperPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScissorPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(TerminateSimButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
            .addComponent(viewerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void RunSimButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        try {
            sim.setCreatureNumber((int) Math.pow(10, CreatureNumSlider.getValue()));
            //System.out.println("runsimbutton set creature num: " + CreatureNumSlider.getValue() + ", " + sim.getCREATURENUMBER());
            sim.initialize();
            
            //System.out.println("Pressed!");
            RunSimButton.setEnabled(false);
            TerminateSimButton.setEnabled(true);
            
            startRenderWorker();
        } catch (Exception e) {
            System.out.println(e.toString());
            //Message.setText("Error! See terminal window.");
        }
    }                                            

    private void TerminateSimButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        stopStatus = true;
        TerminateSimButton.setEnabled(false);
    }                                                  

    
    private void setBarsMax(int value){
        RockPercent.setMaximum(value);
        PaperPercent.setMaximum(value);
        ScissorPercent.setMaximum(value);
    }
    
    private void startRenderWorker() {
        //System.out.println("In render worker");
        setBarsMax(sim.getCREATURENUMBER());
        
        SwingWorker<Integer, Integer[]> worker = new SwingWorker<>() {
            @Override
            protected Integer doInBackground() throws InterruptedException {
                //System.out.println("In DoInBackground");
                //System.out.println(stopStatus + ", " + sim.isOver());
                while(!stopStatus && !sim.isOver()){
                    //System.out.println("settingProgressListener");
                    sim.setProgressListener(this::publish); // Listen for progress
                    //System.out.println("Distributing threads");
                    //setImage(sim.distributeThreads());
                    viewerPanel.updateCreatures(sim.distributeThreads());
                    viewerPanel.repaint();
                    //System.out.println("One cycle has passed");
                }
                //System.out.println("All done!");
                return (0);
            }

            @Override
            protected void process(List<Integer[]> chunks) {
                Integer[] latestProgress = chunks.get(chunks.size() - 1);
                //Bar.setValue(latestProgress);
                RockPercent.setValue(latestProgress[0]);
                PaperPercent.setValue(latestProgress[1]);
                ScissorPercent.setValue(latestProgress[2]);
            }

            @Override
            protected void done() {
                try {
                    int prime = get(); // Retrieve calculated primes
                    //Message.setText("Success!");
                } catch (Exception e) {

                }
                RunSimButton.setEnabled(true);
                TerminateSimButton.setEnabled(false);
                stopStatus = false;
            }
        };

        worker.execute();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new SimViewer().setVisible(true));
    }

    // Variables declaration - do not modify                     
    private javax.swing.JSlider CreatureNumSlider;
    private javax.swing.JProgressBar PaperPercent;
    private javax.swing.JProgressBar RockPercent;
    private javax.swing.JButton RunSimButton;
    private javax.swing.JProgressBar ScissorPercent;
    private javax.swing.JButton TerminateSimButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private com.harsh.rpssim.CreatureViewerPanel viewerPanel;
    // End of variables declaration                   
}
